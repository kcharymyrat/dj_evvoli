# Generated by Django 4.2.6 on 2023-11-12 09:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="cart price",
                    ),
                ),
                (
                    "is_ordered",
                    models.BooleanField(default=False, verbose_name="is ordered"),
                ),
                (
                    "date_added",
                    models.DateTimeField(auto_now_add=True, verbose_name="date added"),
                ),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date added"),
                ),
            ],
            options={
                "verbose_name": "cart",
                "verbose_name_plural": "carts",
                "ordering": ["date_added"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Created", "Created"),
                            ("Ordered", "Ordered"),
                            ("Shipped", "Shipped"),
                            ("Completed", "Completed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Created",
                        max_length=120,
                        verbose_name="status",
                    ),
                ),
                (
                    "payment_option",
                    models.CharField(
                        choices=[("Cash", "Cash"), ("Card Terminal", "Card Terminal")],
                        default="Cash",
                        max_length=120,
                        verbose_name="payment option",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(max_length=255, verbose_name="customer name"),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="8 digits",
                        max_length=8,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '12345678'. Exactly 8 digits.",
                                regex="^\\d{8}$",
                            )
                        ],
                        verbose_name="phone number",
                    ),
                ),
                (
                    "delivery_time",
                    models.DateTimeField(verbose_name="delivery date and time"),
                ),
                ("shipping_address", models.TextField(verbose_name="shipping address")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="email"
                    ),
                ),
                (
                    "total_order_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=100,
                        verbose_name="total order price",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="timestamp"),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order",
                        to="orders.cart",
                        verbose_name="cart",
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="quantity"),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_items",
                        to="orders.cart",
                        verbose_name="cart",
                    ),
                ),
            ],
            options={
                "verbose_name": "cart item",
                "verbose_name_plural": "carts items",
            },
        ),
    ]
